<?xml version="1.0" encoding="UTF-8"?>
<refentry id='grokevt-parselog.1'>
  <!--  $Id$ -->
  <refmeta>
    <refentrytitle>grokevt-parselog</refentrytitle>
    <manvolnum>1</manvolnum>
    <refmiscinfo class="sectdesc">File Conversion Utilities</refmiscinfo>
  </refmeta>
  <refnamediv id='name'>
    <refname>grokevt-parselog</refname>
    <refpurpose>Parse a windows event log and generate human-readable output based on message resources stored in a database.</refpurpose>
  </refnamediv>

  <refsect1 id='synopsis'>
    <title>SYNOPSIS</title>
    <para>
      <command>
	grokevt-parselog -?|--help
      </command>
    </para>
    <para>
      <command>
	grokevt-parselog -l <replaceable>database-dir</replaceable>
      </command>
    </para>
    <para>
      <command>
	grokevt-parselog -m <replaceable>database-dir</replaceable> <replaceable>log-type</replaceable>
      </command>
    </para>
    <para>
      <command>
	grokevt-parselog [-v] [-H] [-h] [-U] [-u] <replaceable>database-dir</replaceable> <replaceable>log-type</replaceable>
      </command> 
    </para>
  </refsect1>

  <refsect1 id='description'>
    <title>DESCRIPTION</title>
    <para>
	grokevt-parselog reads a windows event log (.evt file) and
	combines that information with messages templates and other
	resources stored in a pre-generated database.  This is then
	printed to stdout in a comma-separated values (CSV) format.  
	The database must be created by grokevt-builddb(1).
    </para>
  </refsect1>

  <refsect1 id='arguments'>
    <title>ARGUMENTS</title>

    <variablelist remap='IP'>
      <varlistentry>
        <term>
          <option><replaceable>database-dir</replaceable></option>
        </term>
        <listitem>
          <para>
           This is the directory where the database is
           stored.  Currently, the actual log files from
           the original system are also stored in this
           directory tree.
	  </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist remap='IP'>
      <varlistentry>
        <term>
          <option><replaceable>log-type</replaceable></option>
        </term>
        <listitem>
          <para>
            This is the windows name for the log.  By
            default windows has the following logs:
            <!-- XXX: do newer Windoze versions have additional types? -->
            <screen>
             Application
             Security
             System
            </screen>
            But others may have been created by third party
            software.  Use the -l option to print a list
            of all available log types. (The log names are case-sensitive.)
	  </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1 id='options'>
    <title>OPTIONS</title>

    <variablelist remap='IP'>
      <varlistentry>
        <term>
          <option>-?</option>
        </term>
        <listitem>
          <para>
           Prints a basic usage statement.
	  </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist remap='IP'>
      <varlistentry>
        <term>
          <option>--help</option>
        </term>
        <listitem>
          <para>
           Same as -?.
	  </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist remap='IP'>
      <varlistentry>
        <term>
          <option>-l</option>
        </term>
        <listitem>
          <para>
           Log list mode. Lists the logs available in the specified database.
	  </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist remap='IP'>
      <varlistentry>
        <term>
          <option>-m</option>
        </term>
        <listitem>
          <para>
           Meta information mode. Lists meta information stored in 
           the header of the specified log file. Does not print any 
           actual log records. (Format of output in this mode is 
           still subject to change.)
	  </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist remap='IP'>
      <varlistentry>
        <term>
          <option>-v</option>
        </term>
        <listitem>
          <para>
           Verbose mode.  Prints status messages to stderr, which can be helpful for debugging.
	  </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist remap='IP'>
      <varlistentry>
        <term>
          <option>-h</option>
        </term>
        <listitem>
          <para>
           Prints a header row at the top of the CSV output
           containing labels for each column. (This is the default behavior.)
	  </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist remap='IP'>
      <varlistentry>
        <term>
          <option>-H</option>
        </term>
        <listitem>
          <para>
           Disables the printing of a header row.  This 
           is useful when grokevt-parselog is used in a script.
	  </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist remap='IP'>
      <varlistentry>
        <term>
          <option>-u</option>
        </term>
        <listitem>
          <para>
           Enables the UTF-8 output of some strings.  This can be
           dangerous on terminals that are not configured to support UTF-8.  
	  </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist remap='IP'>
      <varlistentry>
        <term>
          <option>-U</option>
        </term>
        <listitem>
          <para>
           Disables the use of UTF-8 for output. 
           Unicode strings are instead converted to UTF-8 first, 
           and then any remaining non-ASCII characters are 
           quoted. (This is the default behavior.)
	  </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1 id='examples'>
    <title>EXAMPLES</title>
    <para>
	To list all available logs types stored in '~/example.grokevt':
        <screen>
	  grokevt-parselog -l ~/example.grokevt
        </screen>
    </para>
    <para>
	To read the 'Application' log from the database stored in
	'~/example.grokevt' and print it to stdout:
        <screen>
	  grokevt-parselog ~/example.grokevt Application
        </screen>
    </para>
    <para>
	To read the 'System' log from the database stored in
	'~/example.grokevt' and print it to stdout without a header, and
	with verbosity turned on:
        <screen>
	  grokevt-parselog -v -H ~/example.grokevt System
        </screen>
    </para>
  </refsect1>

  <refsect1 id='bugs'>
    <title>BUGS</title>
    <para>
     Probably a few.  This script has not been extensively tested with some guest platforms.
    </para>
    <para>
     The file event log file format is pretty well understood and implemented, but 
     some diabolical wrapped, dirty, or fragmentary logs may not be correctly parsed.  
    </para>
    <para>
     Unicode support is currently limited.  Any suggestions on how to
     better handle unicode output would be appreciated.
    </para>
  </refsect1>

  <refsect1 id='credits'>
    <title>CREDITS</title>
    <para>
	Originally written by Jamie French.
	Converted to Python and extended by Timothy D. Morgan.
	Andreas Schuster has contributed greatly to the understanding of
	the event log format. 
    </para>
    <para>
	Copyright (C) 2005-2007 Timothy D. Morgan
    </para>
    <para>
	Copyright (C) 2004 Jamie French
    </para>
  </refsect1>

  <refsect1 id='license'>
    <title>LICENSE</title>
    <para>
      Please see the file "LICENSE" included with this software
      distribution.
    </para>
    <para>      
      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License version 3 for more details.
    </para>
  </refsect1>

  <refsect1 id='seealso'>
    <title>SEE ALSO</title>
    <para>
     grokevt(7) grokevt-addlog(1) grokevt-builddb(1) grokevt-findlogs(1) grokevt-ripdll(1)
    </para>
  </refsect1>
</refentry>
